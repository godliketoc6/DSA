public class ArrayQueue {
    private static final int MAX_SIZE = 100;
    private int[] queueArray;
    private int front;
    private int rear;
    private int size;

    public ArrayQueue() {
        this.queueArray = new int[MAX_SIZE];
        this.front = 0;
        this.rear = -1;
        this.size = 0;
    }

    public void enqueue(int item) {
        if (isFull()) {
            System.out.println("Queue is full. Cannot enqueue or continue, please try again");
            return;
        }
        rear = (rear + 1) % MAX_SIZE;
        queueArray[rear] = item;
        size++;
    }

    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty. Cannot dequeue or continue, please try again.");
            return -1;
        }
        int item = queueArray[front];
        front = (front + 1) % MAX_SIZE;
        size--;
        return item;
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public boolean isFull() {
        return size == MAX_SIZE;
    }

    public int size() {
        return size;
    }

    public static void main(String[] args) {
        ArrayQueue queue = new ArrayQueue();
        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);

        System.out.println("Dequeued item: " + queue.dequeue());
        System.out.println("Dequeued item: " + queue.dequeue());
        System.out.println("Queue size: " + queue.size());
    }
}
